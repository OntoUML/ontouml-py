:py:mod:`ontouml_py.classes.datatypes.cardinality`
==================================================

.. py:module:: ontouml_py.classes.datatypes.cardinality

.. autoapi-nested-parse::

   This module provides the Cardinality class, which is used to represent and validate cardinality constraints in data models.

   The Cardinality class allows for the specification of lower and upper bounds for cardinality, along with flags for ordering and uniqueness of elements. It uses Pydantic's BaseModel for data validation and ensures that the cardinality constraints provided are logically consistent and valid.

   Classes:
       Cardinality: A class for defining and validating cardinality constraints in data models.

   Example:
       To define a cardinality constraint with a minimum of 1 and no maximum limit, while ensuring elements are unique     and not ordered:

           cardinality = Cardinality(lower_bound="1", upper_bound="*", is_ordered=False, is_unique=True)

   Dependencies:
       This module requires the 'pydantic' package for data validation.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ontouml_py.classes.datatypes.cardinality.Cardinality




.. py:class:: Cardinality(**data)


   Bases: :py:obj:`pydantic.BaseModel`

   A class representing the cardinality constraints in a data model.

   This class allows for the specification and validation of lower and upper bounds of cardinality,
   along with properties indicating whether the elements are ordered and unique.

   :ivar lower_bound: The lower bound of the cardinality, either an integer as a string or '*'. Defaults to None.
   :vartype lower_bound: Optional[str]
   :ivar upper_bound: The upper bound of the cardinality, either an integer as a string or '*'. Defaults to None.
   :vartype upper_bound: Optional[str]
   :ivar is_ordered: Flag indicating if the elements are ordered. Defaults to False.
   :vartype is_ordered: bool
   :ivar is_unique: Flag indicating if the elements are unique. Defaults to True.
   :vartype is_unique: bool
   :raises ValueError: If the lower or upper bounds are not valid according to the multiplicity rules.

   .. py:attribute:: lower_bound
      :type: Optional[Union[str, int]]

      

   .. py:attribute:: upper_bound
      :type: Optional[Union[str, int]]

      

   .. py:attribute:: is_ordered
      :type: bool

      

   .. py:attribute:: is_unique
      :type: bool

      

   .. py:attribute:: model_config

      

   .. py:method:: __ensure_valid_multiplicity()

      Validate the cardinality ensuring the lower and upper bounds are synchronized and valid.

      This method checks for the logical consistency of the lower and upper bounds of the cardinality.
      It ensures that the values are either integers or '*', and that the lower bound is not greater than the upper
      bound. It raises a ValueError if the bounds are not valid, logically inconsistent, or if empty strings are
      provided.

      :raises ValueError: If the cardinality values do not follow the defined rules or if empty strings are used.



