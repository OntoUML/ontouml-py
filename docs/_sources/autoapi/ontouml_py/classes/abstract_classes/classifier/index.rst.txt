:py:mod:`ontouml_py.classes.abstract_classes.classifier`
========================================================

.. py:module:: ontouml_py.classes.abstract_classes.classifier

.. autoapi-nested-parse::

   Module for the Classifier class within an OntoUML model.

   This module defines the Classifier class, an abstract class that represents a general concept in an OntoUML model.
   It extends the Decoratable and Packageable classes, incorporating features of both. Classifier includes a set of
   properties and a flag indicating whether it is abstract. This class serves as a base for more specific types of
   classifiers in OntoUML.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ontouml_py.classes.abstract_classes.classifier.Classifier




.. py:class:: Classifier(**data)


   Bases: :py:obj:`ontouml_py.classes.abstract_classes.decoratable.Decoratable`, :py:obj:`ontouml_py.classes.abstract_classes.packageable.Packageable`

   Abstract base class for classifiers in an OntoUML model.

   Classifier represents a general concept in an OntoUML model. It extends Decoratable and Packageable, inheriting
   their features. This class maintains a set of properties and an 'is_abstract' flag, defining whether the classifier
   is abstract.

   :ivar _properties: A set of Property instances associated with this classifier.
   :vartype _properties: set[Property]
   :ivar is_abstract: Indicates whether the classifier is abstract.
   :vartype is_abstract: bool

   .. py:property:: properties
      :type: set[ontouml_py.classes.concrete_classes.property.Property]

      Get the set of properties associated with the classifier.

      :return: A set of Property instances.
      :rtype: set[Property]


   .. py:attribute:: _properties
      :type: set[ontouml_py.classes.concrete_classes.property.Property]

      

   .. py:attribute:: is_abstract
      :type: bool

      

   .. py:attribute:: model_config

      

   .. py:method:: add_property(new_property)

      Add a property to the classifier.

      :param new_property: The Property instance to be added.
      :type new_property: Property
      :raises TypeError: If the new_property is not an instance of Property.


   .. py:method:: remove_property(old_property)

      Remove a property from the classifier.

      :param old_property: The Property instance to be removed.
      :type old_property: Property
      :raises TypeError: If the old_property is not an instance of Property.
      :raises ValueError: If the old_property is not part of the classifier's properties.



