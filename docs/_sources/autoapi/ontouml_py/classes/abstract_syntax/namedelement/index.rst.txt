:py:mod:`ontouml_py.classes.abstract_syntax.namedelement`
=========================================================

.. py:module:: ontouml_py.classes.abstract_syntax.namedelement

.. autoapi-nested-parse::

   Module for the abstract NamedElement class within an OntoUML model.

   This module defines the NamedElement class, which is an abstract class designed to represent elements with names in an
   OntoUML model. It extends the OntoumlElement class and includes additional attributes and validation for managing named
   elements' details such as their preferred name, alternative names, descriptions, editorial notes, as well as lists of
   creators and contributors.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ontouml_py.classes.abstract_syntax.namedelement.NamedElement




.. py:class:: NamedElement(**data)


   Bases: :py:obj:`ontouml_py.classes.ontoumlelement.OntoumlElement`

   An abstract class representing a named element within an OntoUML model, extending the OntoumlElement class.

   This class provides functionality for managing named elements, including their preferred name, alternative names,
   descriptions, editorial notes, as well as lists of creators and contributors.

   :ivar pref_name: The preferred name of the element, represented as a LangString object. :vartype pref_name:
   Optional[LangString] :ivar alt_names: A list of alternative names for the element, each represented as a LangString
   object. :vartype alt_names: list[LangString] :ivar description: A LangString object representing the description of
   the element. :vartype description: Optional[LangString] :ivar editorial_notes: A list of LangString objects
   containing editorial notes associated with the element. :vartype editorial_notes: list[LangString] :ivar creators: A
   list of URIs represented as strings identifying the creators of the element. :vartype creators: list[str] :ivar
   contributors: A list of URIs represented as strings identifying the contributors to the element. :vartype
   contributors: list[str]

   .. py:class:: Config


      Pydantic's configuration settings for the NamedElement model.

      :cvar arbitrary_types_allowed: Allows custom types like LangString. :vartype arbitrary_types_allowed: bool :cvar
      validate_assignment: Enables validation of field values upon assignment. :vartype validate_assignment: bool
      :cvar extra: Controls the behavior regarding unexpected fields, set to 'forbid' to disallow extra fields.
      :vartype extra: str

      .. py:attribute:: arbitrary_types_allowed
         :value: True

         

      .. py:attribute:: validate_assignment
         :value: True

         

      .. py:attribute:: extra
         :value: 'forbid'

         


   .. py:attribute:: pref_name
      :type: Optional[langstring_lib.langstring.LangString]

      

   .. py:attribute:: alt_names
      :type: list[langstring_lib.langstring.LangString]

      

   .. py:attribute:: description
      :type: Optional[langstring_lib.langstring.LangString]

      

   .. py:attribute:: editorial_notes
      :type: list[langstring_lib.langstring.LangString]

      

   .. py:attribute:: creators
      :type: list[str]

      

   .. py:attribute:: contributors
      :type: list[str]

      


