:py:mod:`ontouml_py.model.property`
===================================

.. py:module:: ontouml_py.model.property

.. autoapi-nested-parse::

   Module for the Property class within an OntoUML model.

   This module defines the Property class, which extends the Decoratable class from the ontouml_py package. The Property
   class represents a feature of a Classifier in an OntoUML model. It includes attributes and methods to define and
   manipulate properties of Classifiers, such as their read-only status, aggregation kind, stereotype, cardinality, type,
   and relationships with other properties. The module also includes necessary imports and configurations for the Property
   class to function within the broader OntoUML framework.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ontouml_py.model.property.Property




.. py:class:: Property(project, **data)


   Bases: :py:obj:`ontouml_py.model.decoratable.Decoratable`, :py:obj:`ontouml_py.model.projectelement.ProjectElement`

   Abstract class representing a decoratable element in an OntoUML model.

   This class extends ModelElement to include the capability of being decorated. It introduces an attribute to
   indicate whether the element is derived. The class is intended to be subclassed by specific model elements that
   support decoration, such as classifiers and properties.

   :ivar is_derived: Indicates whether the element is derived. Derived elements are typically computed or inferred
                     from other elements.
   :vartype is_derived: bool
   :cvar model_config: Configuration settings for the Pydantic model.
   :vartype model_config: Dict[str, Any]

   .. py:property:: property_of
      :type: Optional[object]

      Get the owning classifier of this property.

      :return: The Classifier instance that owns this property, if any.
      :rtype: Optional[Classifier]


   .. py:attribute:: _property_of
      :type: Optional[object]

      

   .. py:attribute:: is_read_only
      :type: bool

      

   .. py:attribute:: aggregation_kind
      :type: ontouml_py.model.enumerations.aggregationkind.AggregationKind

      

   .. py:attribute:: stereotype
      :type: Optional[ontouml_py.model.enumerations.propertystereotype.PropertyStereotype]

      

   .. py:attribute:: cardinality
      :type: object

      

   .. py:attribute:: property_type
      :type: Optional[object]

      

   .. py:attribute:: subsetted_by
      :type: set[Property]

      

   .. py:attribute:: redefined_by
      :type: set[Property]

      

   .. py:attribute:: model_config

      

   .. py:method:: __validate_cardinality_type(checked_value)
      :classmethod:

      Validate the type of the cardinality attribute.

      Ensures that the cardinality attribute is of type Cardinality. Raises a TypeError if the check fails.

      :param checked_value: The value to be checked.
      :type checked_value: Cardinality
      :return: The checked value if validation is successful.
      :rtype: Cardinality
      :raises TypeError: If the cardinality value is not of type Cardinality.


   .. py:method:: __set_property_of(owner)

      Set the owning classifier of this property.

      :param owner: The Classifier instance to be set as the owner of this property.
      :type owner: Optional[Classifier]



