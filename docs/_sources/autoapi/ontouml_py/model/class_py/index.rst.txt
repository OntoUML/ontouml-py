:py:mod:`ontouml_py.model.class_py`
===================================

.. py:module:: ontouml_py.model.class_py


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ontouml_py.model.class_py.Class




.. py:class:: Class(project, **data)


   Bases: :py:obj:`ontouml_py.model.classifier.Classifier`, :py:obj:`ontouml_py.model.projectelement.ProjectElement`, :py:obj:`ontouml_py.model.packageable.Packageable`

   Abstract base class for classifiers in an OntoUML model.

   Classifier represents a general concept in an OntoUML model. It extends Decoratable and Packageable, inheriting
   their features. This class maintains a list of properties and an 'is_abstract' flag, defining whether the classifier
   is abstract.

   :ivar _properties: A list of Property instances associated with this classifier.
   :vartype _properties: list[Property]
   :ivar is_abstract: Indicates whether the classifier is abstract.
   :vartype is_abstract: bool
   :cvar model_config: Configuration settings for the Pydantic model.
   :vartype model_config: Dict[str, Any]

   .. py:attribute:: is_powertype
      :type: bool

      

   .. py:attribute:: order
      :type: str

      

   .. py:attribute:: restricted_to
      :type: set[Optional[ontouml_py.model.enumerations.ontologicalnature.OntologicalNature]]

      

   .. py:attribute:: stereotype
      :type: Optional[ontouml_py.model.enumerations.classstereotype.ClassStereotype]

      

   .. py:attribute:: literals
      :type: set[Optional[ontouml_py.model.literal.Literal]]

      

   .. py:attribute:: model_config

      

   .. py:method:: add_literal(literal)

      Add a literal to the class.

      :param literal: The literal to be added.
      :type literal: Literal
      :raises ValueError: If the provided object is not of type Literal.


   .. py:method:: remove_literal(literal)

      Remove a literal from the class if it exists.

      :param literal: The literal to be removed.
      :type literal: Literal



