:py:mod:`ontouml_py.model.decoratable`
======================================

.. py:module:: ontouml_py.model.decoratable

.. autoapi-nested-parse::

   Module for the Decoratable class within an OntoUML model.

   This module defines the Decoratable class, an abstract class that represents elements in an OntoUML model that can be
   decorated with additional properties. It extends the ModelElement class and includes a boolean attribute to indicate
   whether the element is derived. The class is designed to be subclassed by specific types of model elements that can
   be decorated, such as classifiers and properties.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ontouml_py.model.decoratable.Decoratable




.. py:class:: Decoratable(project, pe_type, **data)


   Bases: :py:obj:`ontouml_py.model.modelelement.ModelElement`

   Abstract base class representing a generic element within an OntoUML model.

   This class provides foundational attributes and methods for all OntoUML elements, including unique identification
   and timestamps for creation and modification. It enforces constraints on certain attributes and includes validation
   logic to maintain their integrity.

   :ivar id: A unique identifier for the element, automatically generated upon instantiation.
   :vartype id: str
   :ivar created: Timestamp when the element was created, defaults to the current time.
   :vartype created: datetime
   :ivar modified: Timestamp when the element was last modified, can be None if not modified.
   :vartype modified: Optional[datetime]
   :cvar model_config: Configuration settings for the Pydantic model.
   :vartype model_config: Dict[str, Any]

   .. py:attribute:: is_derived
      :type: bool

      

   .. py:attribute:: model_config

      


