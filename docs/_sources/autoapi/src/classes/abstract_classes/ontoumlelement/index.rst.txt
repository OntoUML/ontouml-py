:py:mod:`src.classes.abstract_classes.ontoumlelement`
=====================================================

.. py:module:: src.classes.abstract_classes.ontoumlelement

.. autoapi-nested-parse::

   This module defines the OntoumlElement class, an abstract base class for elements in an OntoUML model.

   It includes attributes for unique identification, creation, and modification timestamps, ensuring these properties are
   present across all OntoUML elements. The class also incorporates validations to enforce the integrity of these
   attributes and restricts direct modification of certain fields.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   src.classes.abstract_classes.ontoumlelement.OntoumlElement




Attributes
~~~~~~~~~~

.. autoapisummary::

   src.classes.abstract_classes.ontoumlelement.Project


.. py:data:: Project

   

.. py:class:: OntoumlElement(**data)


   Bases: :py:obj:`abc.ABC`, :py:obj:`pydantic.BaseModel`

   Abstract base class representing a generic element within an OntoUML model.

   Provides base features for OntoUML elements, including a unique identifier, timestamps for creation and
   modification, and a relationship to OntoUML projects. It enforces read-only constraints on certain attributes and
   includes validation logic to maintain the integrity of these attributes.

   :ivar id: A unique identifier for the element, automatically generated upon instantiation.
   :vartype id: str
   :ivar created: Timestamp when the element was created, defaults to the current time.
   :vartype created: datetime
   :ivar modified: Timestamp when the element was last modified, can be None if not modified.
   :vartype modified: Optional[datetime]
   :ivar in_project: List of projects this element is part of. Direct modification is restricted.
   :vartype in_project: list[Project]

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: created
      :type: datetime.datetime

      

   .. py:attribute:: modified
      :type: Optional[datetime.datetime]

      

   .. py:attribute:: in_project
      :type: set[Project]

      

   .. py:attribute:: model_config

      

   .. py:method:: __setattr__(key, value)

      Set attribute values, enforcing logical validation.

      Prevents modification of 'in_project'. Validates 'modified' against 'created'.

      :param key: The attribute name to set.
      :type key: str
      :param value: The value to set for the attribute.
      :type value: Any
      :raises ValueError: If trying to modify read-only fields or if 'modified' is set earlier than 'created'.


   .. py:method:: __eq__(other)

      Determine if two OntoumlElement instances are equal based on their unique identifiers.

      This method is necessary to make instances of OntoumlElement hashable, allowing them to be compared
      based on their 'id' attribute. It assumes that 'id' is a unique identifier for each instance.

      :param other: The other object to compare with the current instance.
      :type other: object
      :return: Returns True if both instances have the same 'id', False otherwise. If 'other' is not an instance
               of OntoumlElement, the method returns NotImplemented.
      :rtype: bool
      :raises NotImplemented: If 'other' is not an instance of OntoumlElement.


   .. py:method:: __hash__()

      Compute the hash value of an OntoumlElement instance.

      This method is essential for making OntoumlElement instances hashable. It uses the unique identifier 'id'
      of the instance to compute the hash. This ensures that each OntoumlElement instance has a unique hash value
      based on its 'id', which is crucial for using these instances in hash-based collections like sets or as keys
      in dictionaries.

      :return: The hash value of the instance, computed based on its 'id'.
      :rtype: int



