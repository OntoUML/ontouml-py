:py:mod:`ontoumlpy.classes.ouelement.oumodelelement.ouclassifier.ouclass`
=========================================================================

.. py:module:: ontoumlpy.classes.ouelement.oumodelelement.ouclassifier.ouclass


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ontoumlpy.classes.ouelement.oumodelelement.ouclassifier.ouclass.OUClass




.. py:class:: OUClass(object_id, name = None, description = None, isAbstract = None, isDerived = None, isPowertype = None, literal = None, order = None, project = None, stereotype = None, attribute = None, restrictedTo = None)


   Bases: :py:obj:`ontoumlpy.classes.ouelement._ouelement._OUElement`

   Class representing an OntoUML Class element with facilities to manage and access class properties.

   `OUClass`, derived from `_OUElement`, further specializes the base class to facilitate representation and
   manipulation of OntoUML Class elements. It does not verify the existence or validity of the provided URI references
   within an OntoUML graph, delegating such checks to potential subclasses or external utility functions.

   :ivar name: The name of the class.
   :vartype name: URIRef
   :ivar attribute: A list of attributes associated with the class.
   :vartype attribute: List[URIRef]
   :ivar description: The description of the class.
   :vartype description: URIRef
   :ivar isAbstract: Indicates if the class is abstract.
   :vartype isAbstract: URIRef
   :ivar isDerived: Indicates if the class is derived.
   :vartype isDerived: URIRef
   :ivar isPowertype: Indicates if the class is a powertype.
   :vartype isPowertype: URIRef
   :ivar literal: The literal associated with the class.
   :vartype literal: URIRef
   :ivar order: The order of the class.
   :vartype order: URIRef
   :ivar project: The project to which the class belongs.
   :vartype project: URIRef
   :ivar restrictedTo: A list of classes restricted to this class.
   :vartype restrictedTo: List[URIRef]
   :ivar stereotype: The stereotype of the class.
   :vartype stereotype: URIRef

   .. py:method:: __getattr__(invalid_att_name)

      Override to raise an exception when attempting to access an invalid attribute.

      :param invalid_att_name: The name of the invalid attribute being accessed.
      :type invalid_att_name: str
      :raises OUInvalidAttribute: In all cases, as intended to flag invalid attribute access.



